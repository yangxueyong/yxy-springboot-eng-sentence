{"version":3,"file":"l-drag.js","sources":["uni_modules/lime-drag/components/l-drag/l-drag.vue","/Users/yxy/work/前端/uniapp/my-preschool/uni_modules/lime-drag/components/l-drag/l-drag.vue?type=component"],"sourcesContent":["<template>\r\n\t<view class=\"l-drag l-class\" :style=\"[areaStyles]\" ref=\"dragRef\" @touchstart=\"setDisabled\">\r\n\t\t<movable-area class=\"l-drag__inner\" v-if=\"isReset\" :style=\"[innerStyles]\">\r\n\t\t\t<slot></slot>\r\n\t\t\t<movable-view class=\"l-drag__ghost\" v-if=\"isDrag && props.ghost\" :animation=\"true\" :style=\"[viewStyles]\" direction=\"all\" :x=\"ghostEl.x\" :y=\"ghostEl.y\" key=\"l-drag-clone\">\r\n\t\t\t\t<slot name=\"ghost\"></slot>\r\n\t\t\t</movable-view>\r\n\t\t\t<movable-view v-if=\"props.before\" class=\"l-drag__before\" disabled :animation=\"false\" :style=\"[viewStyles]\" :x=\"beforeEl.x\" :y=\"beforeEl.y\">\r\n\t\t\t\t<slot name=\"before\"></slot>\r\n\t\t\t</movable-view>\r\n\t\t\t<movable-view\r\n\t\t\t\tv-for=\"(item, oindex) in cloneList\" :key=\"item.id\"\r\n\t\t\t\tdirection=\"all\" \r\n\t\t\t\t:data-oindex=\"oindex\" \r\n\t\t\t\t:style=\"[viewStyles]\"\r\n\t\t\t\tclass=\"l-drag__view\"\r\n\t\t\t\t:class=\"[{'l-is-active': oindex == active, 'l-is-hidden': !item.show}, item.class]\"\r\n\t\t\t\t:x=\"item.x\"\r\n\t\t\t\t:y=\"item.y\"\r\n\t\t\t\t:friction=\"friction\"\r\n\t\t\t\t:damping=\"damping\"\r\n\t\t\t\t:animation=\"animation\"\r\n\t\t\t\t:disabled=\"isDisabled || props.disabled\"\r\n\t\t\t\t@touchstart=\"touchStart\" \r\n\t\t\t\t@change=\"touchMove\" \r\n\t\t\t\t@touchend=\"touchEnd\"\r\n\t\t\t\t@touchcancel=\"touchEnd\"\r\n\t\t\t\t@longpress=\"setDisabled\"\r\n\t\t\t\t>\r\n\t\t\t\t<!-- <view v-if=\"props.remove\" class=\"l-drag__remove\" :style=\"removeStyle\" data-remove=\"true\">\r\n\t\t\t\t\t<slot name=\"remove\" :oindex=\"oindex\" data-remove=\"true\" />\r\n\t\t\t\t</view> -->\r\n\t\t\t\t<!-- <view v-if=\"props.handle\" class=\"l-drag__handle\" :style=\"handleStyle\" data-handle=\"true\">\r\n\t\t\t\t\t<slot name=\"handle\" :oindex=\"oindex\" :active=\"!isDisabled && !isDisabled && oindex == active\" />\r\n\t\t\t\t</view> -->\r\n\t\t\t\t<slot name=\"grid\" :oindex=\"oindex\" :index=\"item.index\" :oldindex=\"item.oldindex\" :content=\"item.content\" :active=\"!isDisabled && !isDisabled && oindex == active\" />\r\n\t\t\t\t<view class=\"mask\" v-if=\"!(isDisabled || props.disabled) && props.longpress\"></view>\r\n\t\t\t</movable-view>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<movable-view v-if=\"props.after\" class=\"l-drag__after\" disabled :animation=\"true\"  direction=\"all\" :style=\"[viewStyles]\" :x=\"afterEl.x\" :y=\"afterEl.y\">\r\n\t\t\t\t<slot name=\"after\"></slot>\r\n\t\t\t</movable-view>\r\n\t\t</movable-area>\r\n\t</view>\r\n</template>\r\n<script lang=\"ts\">\r\n\t// @ts-nocheck\r\n\timport { computed, onMounted, ref, getCurrentInstance, watch, nextTick, reactive , triggerRef, onUnmounted, defineComponent} from \"./vue\";\r\n\timport DragProps from './props';\r\n\timport type {GridRect, Grid, Position} from  './type'\r\n\r\n\r\n\r\n\t\r\n\texport default defineComponent({\r\n\t\tname: 'l-drag',\r\n\t\texternalClasses: ['l-class'],\r\n\t\toptions: {\r\n\t\t\taddGlobalClass: true,\r\n\t\t\tvirtualHost: true,\r\n\t\t},\r\n\t\tprops: DragProps,\r\n\t\temits: ['change'],\r\n\t\tsetup(props, {emit, expose}) {\r\n\r\n\r\n\r\n\t\t\tconst app = getCurrentInstance()\r\n\t\t\tconst isDrag = ref(false)\r\n\t\t\tconst isInit = ref(false)\r\n\t\t\tconst isReset = ref(true)\r\n\t\t\tconst colmunId = ref(-1)\r\n\t\t\t/** 选中项原始下标 */\r\n\t\t\tconst active = ref(-1)\r\n\t\t\tconst maxIndex = ref(-1)\r\n\t\t\tconst animation = ref(true)\r\n\t\t\tconst isDisabled = ref(props.handle || props.longpress ? true: false)\r\n\t\t\t\r\n\t\t\tconst dragEl  = reactive({\r\n\t\t\t\tcontent: null,\r\n\t\t\t\t/** 当前视图下标*/\r\n\t\t\t\tindex: 0,\r\n\t\t\t\t/** 旧视图下标 */\r\n\t\t\t\toldindex: -1,\r\n\t\t\t\t/** 上次原始下标 */\r\n\t\t\t\tlastindex: -1\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tconst ghostEl = reactive({\r\n\t\t\t\tcontent: null,\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t})\r\n\t\t\tconst beforeEl = reactive({\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t})\r\n\t\t\tconst afterEl = reactive({\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tlet gridRects = [] //ref<GridRect[]>([])\r\n\t\t\tconst areaWidth = ref(0)\r\n\t\t\tconst cloneList = ref<Grid[]>([])\r\n\t\t\t// 删除项时可能会减少行数影响到删除过渡动画，故增加此值在删除时保持高度不变，等动画完成后再归零\r\n\t\t\tconst leaveRow = ref(0)\r\n\t\t\tconst extra = computed(() => (props.before ? 1 :0) + (props.after ? 1 : 0))\r\n\t\t\tconst rows = computed(() => Math.ceil( ((isInit.value ? cloneList.value.length : props.list.length) + extra.value) / props.column ))\r\n\t\t\tconst gridHeight = computed(() => props.aspectRatio ? girdWidth.value / props.aspectRatio : (/rpx$/.test(`${props.gridHeight}`) ? uni.upx2px(parseInt(`${props.gridHeight}`)) : parseInt(`${props.gridHeight}`)))\r\n\t\t\tconst girdWidth = computed(() => areaWidth.value / props.column)\r\n\t\t\tconst viewStyles = computed(() => ({width: girdWidth.value + 'px',height: gridHeight.value + 'px'}))\r\n\t\t\tconst areaStyles = computed(() => ({height: (rows.value + leaveRow.value ) * gridHeight.value + 'px'}))\r\n\t\t\tconst innerStyles = computed(() => ({\r\n\r\n\r\n\r\n\t\t\t\theight: (rows.value + props.extraRow + leaveRow.value) * gridHeight.value + 'px'}))\r\n\t\t\t\r\n\t\t\tconst sleep = (cb: Function, time = 1000/60) => setTimeout(cb, time)\r\n\t\t\tconst createGrid = (content: any, position?:Position|null): Grid => {\r\n\t\t\t\tcolmunId.value++\r\n\t\t\t\tmaxIndex.value++\r\n\t\t\t\tconst index = maxIndex.value\r\n\t\t\t\tconst colmun = gridRects[index]\r\n\t\t\t\t\r\n\t\t\t\tlet x = 0\r\n\t\t\t\tlet y = 0\r\n\t\t\t\tif(colmun) {\r\n\t\t\t\t\tif(props.after) {\r\n\t\t\t\t\t\tlet nxet = gridRects[index + 1]\r\n\t\t\t\t\t\tif(!nxet) {\r\n\t\t\t\t\t\t\tnxet = createGridRect(gridRects.length + (props.before ? 1 : 0))\r\n\t\t\t\t\t\t\tgridRects.push(nxet)\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\tsetReset(() => setAfter(nxet))\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetReset()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tx = colmun.x\r\n\t\t\t\t\ty = colmun.y\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst nxet = createGridRect(gridRects.length + (props.before ? 1 : 0))\r\n\t\t\t\t\tgridRects.push(nxet)\r\n\t\t\t\t\tsetReset()\r\n\t\t\t\t\tx = nxet.x\r\n\t\t\t\t\ty = nxet.y\r\n\t\t\t\t}\r\n\t\t\t\tif(position) {\r\n\t\t\t\t\tx = position.x\r\n\t\t\t\t\ty = position.y\r\n\t\t\t\t}\r\n\t\t\t\treturn {id: `l-drag-item-${colmunId.value}`, index, oldindex: index, content, x, y, class: '', show: true}\r\n\t\t\t}\r\n\t\t\tconst setReset = (cb?: any) => {\r\n\t\t\t\t// const newRow = (cloneList.value.length + extra.value) % (props.column)\r\n\t\t\t\tif(isInit.value) {\r\n\t\t\t\t\tcb&&sleep(cb)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst setAfter = ({x, y} = {x: 0, y: 0}) => {\r\n\t\t\t\tif(props.after) {\r\n\t\t\t\t\tafterEl.x = x\r\n\t\t\t\t\tafterEl.y = y\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst setDisabled = (e: any, flag?: boolean= false) => {\r\n\t\t\t\t // e?.preventDefault() \r\n\t\t\t\tconst type = `${e.type}`.toLowerCase()\r\n\t\t\t\tconst {handle = props.touchHandle} = e.target.dataset\r\n\t\t\t\tif(props.handle && !handle) {\r\n\t\t\t\t\tisDisabled.value = true\r\n\t\t\t\t} else if(props.handle && handle && !props.longpress) {\r\n\t\t\t\t\tisDisabled.value = flag\r\n\t\t\t\t} else if(props.handle && handle && props.longpress && type.includes('longpress')) {\r\n\t\t\t\t\tisDisabled.value = false\r\n\t\t\t\t} else if(props.longpress && type.includes('longpress') && !props.handle) {\r\n\t\t\t\t\tisDisabled.value = false\r\n\t\t\t\t}\r\n\t\t\t\tif(type.includes('touchend') && props.longpress) {\r\n\t\t\t\t\tisDisabled.value = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst createGridRect = (i: number, last?: GridRect): GridRect => {\r\n\t\t\t\tlet { row } = last || gridRects[gridRects.length - 1] || { row: 0 }\r\n\t\t\t\tconst col = i % (props.column)\r\n\t\t\t\tconst grid = (row: number, x: number, y: number):GridRect => {\r\n\t\t\t\t\treturn {row, x, y, x1: x +  girdWidth.value, y1: y + gridHeight.value}\r\n\t\t\t\t}\r\n\t\t\t\tif(col == 0 && i != 0) {row++} \r\n\t\t\t\treturn grid(row, col * girdWidth.value, row * gridHeight.value)\r\n\t\t\t}\r\n\t\t\tconst createGridRects = () => {\r\n\t\t\t\tlet rects: GridRect[] = []\r\n\t\t\t\tconst length = rows.value * props.column + extra.value\r\n\t\t\t\tgridRects = []\r\n\t\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\t\tconst item = createGridRect(i, rects[rects.length - 1])\r\n\t\t\t\t\trects.push(item)\r\n\t\t\t\t}\r\n\t\t\t\tif(props.before) {\r\n\t\t\t\t\tconst {x, y} = rects.shift()\r\n\t\t\t\t\tbeforeEl.x = x\r\n\t\t\t\t\tbeforeEl.y = y\r\n\t\t\t\t}\r\n\t\t\t\tsetAfter(rects[props.list.length])\r\n\t\t\t\tgridRects = rects as GridRect[]\r\n\t\t\t}\r\n\t\t\tconst updateList = (v: any[]) => {\r\n\t\t\t\tcloneList.value = v.map((content) => createGrid(content))\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst touchStart = (e: any) => {\r\n\t\t\t\tif(e.target.dataset.remove) return\r\n\t\t\t\t// 选中项原始下标\r\n\t\t\t\tconst {oindex} = e.currentTarget?.dataset || e.target?.dataset || {}\r\n\t\t\t\tif(typeof oindex !== 'number') return\r\n\t\t\t\tconst target = cloneList.value[oindex]\r\n\t\t\t\tisDrag.value = true\r\n\t\t\t\t// 选中项原始下标\r\n\t\t\t\tactive.value = oindex \r\n\t\t\t\t// 选中项的当前下标\r\n\t\t\t\tdragEl.index = dragEl.oldindex = target.index\r\n\t\t\t\tghostEl.x = target.x||0\r\n\t\t\t\tghostEl.y = target.y||0\r\n\t\t\t\tdragEl.content = ghostEl.content = target.content\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst touchEnd = (e: any) => {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif(e.target.dataset.remove || active.value==-1) return\r\n\t\t\t\t\tsetDisabled(e, true)\r\n\t\t\t\t\tisDrag.value = false\r\n\t\t\t\t\tconst isEmit = dragEl.index !== dragEl.oldindex && dragEl.oldindex > -1 // active.value !== dragEl.index\r\n\t\t\t\t\tdragEl.lastindex = active.value\r\n\t\t\t\t\tdragEl.oldindex = active.value = -1\r\n\t\t\t\t\tconst last = cloneList.value[dragEl.lastindex]\r\n\t\t\t\t\tconst position = gridRects[dragEl.index]\r\n\t\t\t\t\tnextTick(() => {\r\n\t\t\t\t\t\tlast.x = position.x + 0.001\r\n\t\t\t\t\t\tlast.y = position.y + 0.001\r\n\t\t\t\t\t\tsleep(() => {\r\n\t\t\t\t\t\t\tlast.x = position.x\r\n\t\t\t\t\t\t\tlast.y = position.y\r\n\t\t\t\t\t\t\tisEmit && emitting()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t},80)\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tconst emitting = () => {\r\n\t\t\t\tconst clone = [...cloneList.value].sort((a, b) => a.index - b.index)//.map(item => ref(item.content))\r\n\t\t\t\temit('change', clone)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst touchMove = (e: any) => {\r\n\t\t\t\tif(!isDrag.value) return\r\n\r\n\t\t\t\tlet {oindex} = e.currentTarget.dataset\r\n\r\n\r\n\r\n\r\n\t\t\t\tif(oindex != active.value) return\r\n\t\t\t\tconst {x, y} = e.detail\r\n\t\t\t\tconst centerX = x + girdWidth.value / 2\r\n\t\t\t\tconst centerY = y + gridHeight.value / 2\r\n\t\t\t\tfor (let i = 0; i < cloneList.value.length; i++) {\r\n\t\t\t\t\tconst item = gridRects[i]\r\n\t\t\t\t\tif(centerX > item.x && centerX < item.x1 && centerY > item.y && centerY < item.y1) {\r\n\t\t\t\t\t\tghostEl.x = item.x\r\n\t\t\t\t\t\tghostEl.y = item.y\r\n\t\t\t\t\t\tif(dragEl.index != i) {\r\n\t\t\t\t\t\t\t_move(active.value, i)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst getDragEl = (oindex: number) => {\r\n\t\t\t\tif(isDrag.value) {return dragEl}\r\n\t\t\t\treturn cloneList.value[oindex]\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * 把原始数据中排序为index的项 移动到 toIndex\r\n\t\t\t * @param oindex 原始数据的下标\r\n\t\t\t * @param toIndex 视图中的下标\r\n\t\t\t * @param position 指定坐标\r\n\t\t\t */\r\n\t\t\tconst _move = (oindex: number, toIndex: number, position?: Position|null, emit: boolean = true) => {\r\n\t\t\t\tconst length = cloneList.value.length - 1\r\n\t\t\t\tif(toIndex > length || toIndex < 0) return\r\n\t\t\t\t// 获取oIdnex在视图中的项目\r\n\t\t\t\tconst dragEl = getDragEl(oindex)\r\n\t\t\t\tlet speed = 0\r\n\t\t\t\tlet start = dragEl.index\r\n\t\t\t\t// 比较开始index和终点index，设置方向\r\n\t\t\t\tif(start < toIndex) {speed = 1} \r\n\t\t\t\tif(start > toIndex) {speed = -1}\r\n\t\t\t\tif(!speed) return\r\n\t\t\t\t// 距离\r\n\t\t\t\tlet distance = start - toIndex\r\n\t\t\t\t// 找到区间所有的项\r\n\t\t\t\twhile(distance) {\r\n\t\t\t\t\tdistance += speed\r\n\t\t\t\t\t// 目标\r\n\t\t\t\t\tconst target = isDrag.value ? (dragEl.index += speed)  : (start += speed) \r\n\t\t\t\t\tlet targetOindex = cloneList.value.findIndex(item => item.index == target && item.content != dragEl.content)\r\n\t\t\t\t\tif (targetOindex == oindex) return\r\n\t\t\t\t\tif (targetOindex < 0) {targetOindex = cloneList.value.length - 1}\r\n\t\t\t\t\tlet targetEl = cloneList.value[targetOindex]\r\n\t\t\t\t\tif(!targetEl) return;\r\n\t\t\t\t\t// 上一个index\r\n\t\t\t\t\tconst lastIndex = target - speed\r\n\t\t\t\t\tconst activeEl = cloneList.value[oindex]\r\n\t\t\t\t\tconst rect = gridRects[lastIndex]\r\n\t\t\t\t\ttargetEl.x = rect.x\r\n\t\t\t\t\ttargetEl.y = rect.y\r\n\t\t\t\t\ttargetEl.oldindex = targetEl.index\r\n\t\t\t\t\ttargetEl.index = lastIndex\r\n\t\t\t\t\tactiveEl.oldindex = activeEl.index //oIndex\r\n\t\t\t\t\tactiveEl.index = toIndex\r\n\t\t\t\t\t// 到达终点，如果是拖拽则不处理\r\n\t\t\t\t\tif(!distance && !isDrag.value) {\r\n\t\t\t\t\t\tconst rect = gridRects[toIndex]\r\n\t\t\t\t\t\tconst {x, y} = position||rect\r\n\t\t\t\t\t\tactiveEl.x = dragEl.x = x\r\n\t\t\t\t\t\tactiveEl.y = dragEl.y = y\r\n\t\t\t\t\t\t// triggerRef(cloneList)\r\n\t\t\t\t\t\tif(emit) {\r\n\t\t\t\t\t\t\temitting()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 为区分是主动调用还是内部方法\r\n\t\t\t */\r\n\t\t\tconst move = (oindex: number, toIndex: number) => {\r\n\t\t\t\tactive.value = -1\r\n\t\t\t\tisDrag.value = false\r\n\t\t\t\t_move(oindex, toIndex)\r\n\t\t\t}\r\n\t\t\t// 临时处理 待有空再完善\r\n\t\t\tconst REMOVE_TIME = 400\r\n\t\t\tlet removeTimer = null\r\n\t\t\tconst remove = (oindex: number) => {\r\n\t\t\t\tactive.value = -1\r\n\t\t\t\tisDrag.value = false\r\n\t\t\t\t\r\n\t\t\t\tclearTimeout(removeTimer)\r\n\t\t\t\tconst item = cloneList.value[oindex]\r\n\t\t\t\tif(props.disabled || !item) return\r\n\t\t\t\titem.show = false\r\n\t\t\t\tconst after = cloneList.value.length - 1\r\n\t\t\t\t_move(oindex, after, item, false)\r\n\t\t\t\tsetAfter(gridRects[after])\r\n\t\t\t\tmaxIndex.value--\r\n\t\t\t\tconst _remove = (_index = oindex) => {\r\n\t\t\t\t\t// 小程序 删除会闪一下 所以先关闭动画再开启\r\n\t\t\t\t\t// animation.value = false\r\n\t\t\t\t\tconst row = Math.ceil((cloneList.value.length - 1 + extra.value) / props.column)\r\n\t\t\t\t\tif( row < rows.value) {\r\n\t\t\t\t\t\tleaveRow.value = (rows.value - row)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcloneList.value.splice(_index, 1)[0]\r\n\t\t\t\t\temitting()\r\n\t\t\t\t\tremoveTimer = setTimeout(() => {\r\n\t\t\t\t\t\tleaveRow.value = 0\r\n\t\t\t\t\t},  REMOVE_TIME)\r\n\t\t\t\t} \r\n\t\t\t\t_remove()\r\n\t\t\t}\r\n\t\t\tconst push = (...args: any) => {\r\n\t\t\t\tif(props.disabled) return\r\n\t\t\t\tif(Array.isArray(args)) {\r\n\t\t\t\t\tPromise.all(args.map(async item => await add(item, true))).then(emitting)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst add = (content: any, after: boolean) => {\r\n\t\t\t\treturn new Promise((resolve) => {\r\n\t\t\t\t\tconst item = createGrid(content, after ? null : {x: -100, y:0})\r\n\t\t\t\t\titem.class = 'l-drag-enter'\r\n\t\t\t\t\tcloneList.value.push(item)\r\n\t\t\t\t\tconst length = cloneList.value.length - 1\r\n\t\t\t\t\tnextTick(() => {\r\n\t\t\t\t\t\tsleep(() => {\r\n\t\t\t\t\t\t\titem.class = 'l-drag-leave'\r\n\t\t\t\t\t\t\t_move(length, (after ? length : 0), null, false)\r\n\t\t\t\t\t\t\ttriggerRef(cloneList)\r\n\t\t\t\t\t\t\tresolve(true)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tconst unshift = (...args: any) => {\r\n\t\t\t\tif(props.disabled) return\r\n\t\t\t\tif(Array.isArray(args)) {\r\n\t\t\t\t\tPromise.all(args.map(async (item) => await add(item))).then(emitting)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// 暂时先简单处理，待有空再完善\r\n\t\t\tconst shift = () => {\r\n\t\t\t\tif(!cloneList.value.length) return\r\n\t\t\t\tremove(cloneList.value.findIndex(item => item.index == 0) || 0)\r\n\t\t\t}\r\n\t\t\tconst pop = () => {\r\n\t\t\t\tconst length = cloneList.value.length-1\r\n\t\t\t\tif(length < 0 ) return\r\n\t\t\t\tremove(cloneList.value.findIndex(item => item.index == length) || length)\r\n\t\t\t}\r\n\t\t\t// const splice = (start, count, ...context) => {\r\n\t\t\t// \t// 暂未实现\r\n\t\t\t// }\r\n\t\t\tconst clear = () => {\r\n\t\t\t\tisInit.value = isDrag.value = false\r\n\t\t\t\tmaxIndex.value = colmunId.value = active.value = -1\r\n\t\t\t\tcloneList.value = []\r\n\t\t\t\tgridRects = []\r\n\t\t\t}\r\n\t\t\tconst init = () => {\r\n\t\t\t\tclear()\r\n\t\t\t\tcreateGridRects()\r\n\t\t\t\tnextTick(() => {\r\n\t\t\t\t\tupdateList(props.list)\r\n\t\t\t\t\tisInit.value = true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tlet count = 0\r\n\t\t\tconst getRect = () => {\r\n\t\t\t\tcount++\r\n\r\n\t\t\t\tuni.createSelectorQuery().in(app.proxy).select('.l-drag').boundingClientRect((res: UniNamespace.NodeInfo) => {\r\n\t\t\t\t\tif(res) {\r\n\t\t\t\t\t\tareaWidth.value = res.width || 0\r\n\t\t\t\t\t\t// 小程序居然无法响应式？\r\n\t\t\t\t\t\tinit()\r\n\t\t\t\t\t}\r\n\t\t\t\t}).exec()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t}\r\n\t\t\tonMounted(getRect)\r\n\t\t\tonUnmounted(clear)\r\n\t\t\twatch(() => props.list, init)\r\n\t\t\t\r\n\r\n\t\t\texpose({\r\n\t\t\t\tremove,\r\n\t\t\t\t// add,\r\n\t\t\t\tmove,\r\n\t\t\t\tpush,\r\n\t\t\t\tunshift,\r\n\t\t\t\tshift,\r\n\t\t\t\tpop\r\n\t\t\t})\r\n\r\n\t\t\treturn {\r\n\r\n\r\n\r\n\t\t\t\tcloneList,\r\n\t\t\t\t\r\n\t\t\t\tareaStyles,\r\n\t\t\t\tinnerStyles,\r\n\t\t\t\tviewStyles,\r\n\t\t\t\t\r\n\t\t\t\tsetDisabled,\r\n\t\t\t\tisDisabled,\r\n\t\t\t\tisReset,\r\n\t\t\t\tisDrag,\r\n\t\t\t\t\r\n\t\t\t\tactive,\r\n\t\t\t\tanimation,\r\n\t\t\t\t\r\n\t\t\t\tafterEl,\r\n\t\t\t\tghostEl,\r\n\t\t\t\tbeforeEl,\r\n\t\t\t\t\r\n\t\t\t\ttouchStart,\r\n\t\t\t\ttouchMove,\r\n\t\t\t\ttouchEnd,\r\n\t\t\t\t\r\n\t\t\t\tremove,\r\n\t\t\t\t// add,\r\n\t\t\t\tmove,\r\n\t\t\t\tpush,\r\n\t\t\t\tunshift,\r\n\t\t\t\t// shift,\r\n\t\t\t\t// pop,\r\n\t\t\t\tprops\r\n\t\t\t\t// isDelete: props.delete,\r\n\t\t\t\t// ...toRefs(props)\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n</script>\r\n<style lang=\"scss\">\r\n\t@import './index';\r\n</style>\r\n","import Component from '/Users/yxy/work/前端/uniapp/my-preschool/uni_modules/lime-drag/components/l-drag/l-drag.vue'\nwx.createComponent(Component)"],"names":["defineComponent","DragProps","getCurrentInstance","ref","reactive","computed","uni","row","nextTick","emit","dragEl","rect","triggerRef","onMounted","onUnmounted","watch"],"mappings":"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"}