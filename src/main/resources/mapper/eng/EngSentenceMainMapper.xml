<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.eng.mapper.eng.EngSentenceMainMapper">
  <resultMap id="BaseResultMap" type="com.example.eng.entity.eng.EngSentenceMain">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="zn_name" jdbcType="VARCHAR" property="znName" />
    <result column="en_name" jdbcType="VARCHAR" property="enName" />
    <result column="sort" jdbcType="VARCHAR" property="sort" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, zn_name, en_name, sort, status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_eng_sentence_main
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectOrderBySort" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_eng_sentence_main
    <where>
      <if test="id!= null and id!= ''">
        and id = #{id,jdbcType=VARCHAR}
      </if>
      <if test="searchText!= null and searchText!= ''">
        and
        (
          zn_name like concat('%', #{searchText,jdbcType=VARCHAR}, '%') or
          en_name like concat('%', #{searchText,jdbcType=VARCHAR}, '%')
        )
      </if>
      and status='available'
    </where>
    order by sort
  </select>

  <select id="selectSearchOrderBySort" parameterType="com.example.eng.entity.eng.io.EngSentenceMainIO" resultType="com.example.eng.entity.eng.vo.SearchEngSentenceVO">
    select * from (
        select * from (
          select id,zn_name,en_name,sort,'main' as type, null as local_audio_path
          from t_eng_sentence_main
          where 1=1
          and
          (
                zn_name like concat('%', #{searchText,jdbcType=VARCHAR}, '%') or
                en_name like concat('%', #{searchText,jdbcType=VARCHAR}, '%')
          )
          and status='available'
          order by sort
        ) a
        <if test='ckType == "Y"'>
          union all
          select * from (
            select d.main_id,d.zn_name,d.en_name,m.sort,'detail' as type,d.local_audio_path
            from t_eng_sentence_detail d inner join t_eng_sentence_main m
            on d.main_id = m.id
            and d.status='available'
            and m.status='available'
            where 1=1
            and
            (
                  d.zn_name like concat('%', #{searchText,jdbcType=VARCHAR}, '%')
                or d.en_name like concat('%', #{searchText,jdbcType=VARCHAR}, '%')
            )
            order by d.main_id,m.sort,d.sort
          )b
        </if>
    ) a1
  </select>


  <select id="selectNextBySort" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_eng_sentence_main
    where 1=1
    <if test="sort!= null and sort!= ''">
        and sort &gt; #{sort}
    </if>
    and status='available'
    order by sort
    limit 1
  </select>

  <select id="selectUpBySort" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_eng_sentence_main
    where 1=1
    <if test="sort!= null and sort!= ''">
        and sort &lt; #{sort}
    </if>
    and status='available'
    order by sort desc
    limit 1
  </select>

  <select id="selectOrderByRandom" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_eng_sentence_main
    where status='available'
    ORDER BY RAND() LIMIT 1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_eng_sentence_main
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.eng.entity.eng.EngSentenceMain">
    insert into t_eng_sentence_main (id, zn_name, en_name,
      sort, status, create_time, 
      update_time)
    values (#{id,jdbcType=VARCHAR}, #{znName,jdbcType=VARCHAR}, #{enName,jdbcType=VARCHAR},
      #{sort,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.eng.entity.eng.EngSentenceMain">
    insert into t_eng_sentence_main
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="znName != null">
        zn_name,
      </if>
      <if test="enName != null">
        en_name,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="znName != null">
        #{znName,jdbcType=VARCHAR},
      </if>
      <if test="enName != null">
        #{enName,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.eng.entity.eng.EngSentenceMain">
    update t_eng_sentence_main
    <set>
      <if test="znName != null">
        zn_name = #{znName,jdbcType=VARCHAR},
      </if>
      <if test="enName != null">
        en_name = #{enName,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.eng.entity.eng.EngSentenceMain">
    update t_eng_sentence_main
    set zn_name = #{znName,jdbcType=VARCHAR},
      en_name = #{enName,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>